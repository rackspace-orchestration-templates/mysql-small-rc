heat_template_version: 2015-10-15

description: |
 #### MySQL Small Secondary - RCv3

parameter_groups:

parameters:
  server_name:
    type: string
    default: example-0
  server_flavor:
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
  server_image:
    type: string
    default: f4bbbce2-50b0-4b07-bf09-96c175a45f4b
    constraints:
    - allowed_values:
      - f4bbbce2-50b0-4b07-bf09-96c175a45f4b
  ssh_key:
    type: string
    label: SSH Key
    description: SSH Key for LAMP Slave Nodes
  parent_stack_id:
    type: string
    default: None
  mysql_slave_master:
    type: string
  mysql_node_index:
    type: string
  mysql_root_password:
    type: string
  mysql_slave_user:
    type: string
  mysql_slave_password:
    type: string
  mysql_role:
    type: string
  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
resources:
  upload_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
      - name: results
      config: |
        #!/bin/bash
        set -e
        git clone -b 'stable' --single-branch --progress https://github.com/rackspace-orchestration-templates/ansible-roles.git /etc/ansible/roles > $heat_outputs_path.results 2>&1

  mysql_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: |
        ---
        - name: Install and configure MySQL
          hosts: localhost
          connection: local
          roles:
          - common
          - mysql
          - firewall
  deploy_roles:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: upload_role_config
      server:
        get_resource: mysql_server
  deploy_mysql:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_roles
    properties:
      signal_transport: TEMP_URL_SIGNAL
      input_values:
        tz: "America/Chicago"
        mysql_slave_master: { get_param: mysql_slave_master }
        mysql_node_index: { get_param: mysql_node_index }
        mysql_root_password: { get_param: mysql_root_password }
        mysql_slave_user: { get_param: mysql_slave_user }
        mysql_slave_password: { get_param: mysql_slave_password}
        mysql_role: { get_param: mysql_role }
        firewall_global_rules: [ "0.0.0.0,0,22,tcp", "0.0.0.0,0,3306,tcp"]
      config:
        get_resource: mysql_config
      server:
        get_resource: mysql_server
  mysql_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "server_name" }
      key_name: { get_param: "ssh_key" }
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      networks:
      - network: { get_param: rc_network_name }
      - uuid: 11111111-1111-1111-1111-111111111111
      metadata:
        rax-heat: { get_param: "parent_stack_id" }
        build_config: "monitoring_defaults"
  mysql_server_public_ip:
    type: Rackspace::RackConnect::PublicIP
    depends_on:
    - mysql_server
    properties:
      server_id: { get_resource: mysql_server }
outputs:
  public_ip:
    description: Server Public IP
    value:
      get_attr: [mysql_server, accessIPv4]
  rc_ip:
    description: RackConnect IP
    value:
      get_attr: [mysql_server, networks, { get_param: rc_network_name }, 0]
  private_ip:
    description: Server Private IP
    value:
      get_attr: [mysql_server, networks, private, 0]
